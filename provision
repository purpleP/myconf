#! /usr/bin/env bash

mkdir -p ~/.config/nvim/pack/packages/{opt,start}
configure_git() {

    git config --global alias.a "commit --amend"
    git config --global alias.b "branch --sort=committerdate"
    git config --global alias.blank "!git clean -dfX; git submodule foreach --recursive 'git clean -dfX'"
    git config --global alias.c "commit"
    git config --global alias.d "diff"
    git config --global alias.lg "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=human"
    git config --global alias.s "status"
    git config --global alias.su "submodule update --init --recursive"
    git config --global alias.sw "switch"
    git config --global alias.undo "restore -s HEAD~ -p"
    git config --global alias.unstage "restore -S -p"
    git config --global color.diff.meta "yellow bold"
    git config --global color.status.added "green bold"
    git config --global color.status.branch "yellow bold"
    git config --global color.status.changed "yellow bold"
    git config --global color.status.deleted "red bold"
    git config --global color.status.remoteBranch "yellow bold"
    git config --global color.status.untracked "blue bold"
    git config --global commit.verbose "true"
    git config --global core.editor "nvim -c 'startinsert'"
    git config --global core.excludesfile "~/.gitignore_global"
    git config --global diff.tool "vimdiff"
    git config --global difftool.path "vimdiff"
    git config --global difftool.prompt "true"
    git config --global difftool.trustExitCode "true"
    git config --global difftool.vimdiff.cmd "nvim -d \$BASE \$LOCAL -O"
    git config --global fetch.parallel 20
    git config --global fetch.writeCommitGraph "true"
    git config --global help.autocorrect -1
    git config --global log.date auto:human
    git config --global merge.conflictstyle diff3
    git config --global merge.tool "vimdiff"
    git config --global mergetool.prompt "true"
    git config --global mergetool.vimdiff.cmd "nvim -d \$BASE \$MERGED \$REMOTE \$LOCAL -c 'wincmd w' -c 'wincmd J'"
    git config --global pager.diff "true"
    git config --global pager.log "true"
    git config --global pager.show "true"
    git config --global pull.rebase true
    git config --global push.default current
    git config --global rerere.enabled "true"
    git config --global submodule.recurse true

}

install_or_update_plugin() {
    res=$(git -C "$1" clone "$2" --depth=1 --recursive 2>&1)
    if [[ $? -ne 0 ]]; then
        regex="fatal: destination path '([^']+)'.*" 
        if [[ $res =~ $regex ]]; then
            dir="${BASH_REMATCH[1]}"
            git -C "$1/$dir" pull
        fi
    fi
}

case "$1" in
    plugin) shift; install_or_update_plugin $@ ;;
    git) configure_git ;;
    *) xargs -n 2 -P 20 -a plugins.txt ./provision plugin ;;
esac
